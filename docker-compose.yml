# version: '3.8'

# services:
#   backend:
#     build:
#       context: ./Server
#     ports:
#       - "5000:5000"
#     env_file:
#       - ./Server/.env
#     volumes:
#       - ./Server:/app
#       - /app/node_modules
#     depends_on:
#       - mongo
#     networks:
#       - app-network
#     restart: unless-stopped

#   frontend:
#     build:
#       context: ./Client
#     ports:
#       - "3000:3000"
#     volumes:
#       - ./Client:/app
#       - /app/node_modules
#     stdin_open: true
#     tty: true
#     depends_on:
#       - backend
#     networks:
#       - app-network
#     restart: unless-stopped

#   mongo:
#     image: mongo
#     ports:
#       - "27017:27017"
#     volumes:
#       - mongo-data:/data/db
#     networks:
#       - app-network

#   prometheus:
#     image: prom/prometheus:latest
#     container_name: prometheus
#     ports:
#       - "9091:9090"
#     volumes:
#       - ./prometheus.yml:/etc/prometheus/prometheus.yml
#       - prometheus_data:/prometheus
#     command:
#       - '--config.file=/etc/prometheus/prometheus.yml'
#     networks:
#       - app-network

#   grafana:
#     image: grafana/grafana:latest
#     container_name: grafana
#     ports:
#       - "3001:3000"
#     volumes:
#       - grafana_data:/var/lib/grafana
#     depends_on:
#       - prometheus
#     networks:
#       - app-network

# volumes:
#   mongo-data:
#   prometheus_data:
#   grafana_data:

# networks:
#   app-network:
version: "3.8"

services:
  mongo:
    image: mongo:latest
    container_name: mongo
    ports:
      - "27017:27017"
    volumes:
      - mongo-data:/data/db
    networks:
      - app-network
    restart: unless-stopped

  backend:
    build: ../Server
    container_name: backend
    depends_on:
      - mongo
    env_file:
      - ../Server/.env
    ports:
      - "5000:5000"
    volumes:
      - ../Server:/app
      - /app/node_modules
    networks:
      - app-network
    restart: unless-stopped

  frontend:
    build: ../Client
    container_name: frontend
    depends_on:
      - backend
    ports:
      - "3000:3000"
    volumes:
      - ../Client:/app
      - /app/node_modules
    networks:
      - app-network
    stdin_open: true
    tty: true
    restart: unless-stopped

  # === SECTION PROMETHEUS CORRIGÉE ===
  prometheus:
    container_name: prometheus
    # On dit à Docker de construire une image en utilisant notre Dockerfile
    build:
      context: .
      dockerfile: prometheus.dockerfile
    command:
      - --config.file=/etc/prometheus/prometheus.yml
    ports:
      - "9091:9090"
    # On ne garde que le volume pour les données, plus de montage de fichier de config !
    volumes:
      - prometheus_data:/prometheus
    networks:
      - app-network
    restart: unless-stopped
  # ==================================

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    depends_on:
      - prometheus
    ports:
      - "3001:3000"
    volumes:
      - grafana_data:/var/lib/grafana
    networks:
      - app-network
    restart: unless-stopped

networks:
  app-network:
    driver: bridge

volumes:
  mongo-data:
  prometheus_data:
  grafana_data:

